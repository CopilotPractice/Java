#####
09:05
#####

어제 만들었던 첫번째 프로그램을 보고 알 수 있었던것
- 대소문자가 중요하더라
- 괄호 종류에 따라서 역할이 다르다 (그래서 정확하게 써야한다)
참고) () - 어떤 다른 프로그램을 실행할때 필요한 입력값을 집어넣기 위한 용도
     {} - 코드블록, 코드에 영역을 구분하기 위한 용도 
	 [] - 똑같은 종류의 값을 여러개 집어넣기 위한 용도, 배열
	 <> - 어딘가에 값을 집어넣을때, 어떤 종류의 값을 집어넣을지를 정하는 용도 

- public class HelloJava <- HelloJava.java
-> 파일이름과 대소문자가 완전히 동일한 부분이 있다.
-> 자바에서는 .java 파일의 이름은 첫글자는 대문자가 일반적

- "." <- 마침표를 쓰더라
-> 소유의 의미 가진다.

- ";" <- 세미콜론을 사용하더라
-> 명령어 한문장이 끝났음을 의미

#######################################################

강의노트가 나왔을때 기본적으로 해야하는 숙제
- 오늘의 키워드
-> 키워드들은 인터넷으로 한번씩 검색해서 보자

참고사항
- 나중에 어떤 프로그래밍을 하시던 공부를 하던
  폴더 경로에 한글이 없는게 좋다.
  
C:\SBSJSP-LJH\eclipse\eclipse.exe
C:\SBSJSP-LJH\workspace	 

컴파일러
- 사람의 언어로 구성된 명령어를
  컴퓨터가 알아들을 수 있는 언어로 바꿔주는 (번역해주는)
  특수한 프로그램 
  
컴파일
- 사람의 언어로 구성된 명령어를
  컴퓨터가 알아들을 수 있는 언어로 바꿔주는 (번역해주는) 행위  

OS - 운영체제

A <- 라는 문자를 번역 

- 윈도우       : 0101
- 유닉스       : 0111
- 리눅스       : 1010
- macOS     : 1110

아르바이트 - 초벌번역  

#####
10:25
#####

프로그램 vs 프로세스

프로그램 
- 컴퓨터가 할일이 적혀 있는 문서 파일

프로세스
- 프로그램의 내용을 컴퓨터가 
  실행하고 있거나, 실행할 준비가 된 상태
  
CPU, 메모리 ★

프로그램 : 파일 
프로세스 : 파일안에 내용이 메모리에 올라가서 (위치해서)
        그 내용이 실행중이거나, 실행가능한 상태 
		
프로그래머
- 프로그래밍 -> 메모리를 가지고 노는 
		
프로그램 <-> 프로세스 (메모리)

컴퓨터야, 내가 이러이러한 값을 저장해서 사용할건데,
니가 가지고 있는 메모리를 좀 빌려주라

- 컴퓨터야 내가 정수 데이터를 저장해서 사용할거니까
  4byte 만큼의 메모리를 빌려줘 

프로그램이 컴퓨터에게 메모리를 빌리기 위해 사용하는
유일무이한 방법
- 데이터타입을 사용

int num;

- int는 자바에서 4byte만큼의 정수를 저장할 수 있는
  메모리 공간을 빌려오기 위한 문법 

- num : 이렇게 빌린 메모리의 이름표를 붙여둔다.
        변수(variable)

변수
- 컴퓨터에게 빌린 메모리의 이름
- 저장할수 있는 데이터는 데이터타입에 따라 다르다.
- 데이터타입을 지켜서 엄격하게 준수해야한다.
- 변수는 값을 하나밖에 저장하지 못한다.
- 변수는 가장 최근에 (즉, 마지막에) 저장된		
  값 하나만 유지한다.

- 동일 범위안에서는 이름이 중복될수 없다. {....}

프로그램 - 프로세스 (메모리)
데이터타입 - 변수 


변수 = XXXX;
- 단순 값 
- 연산식의 결과값
- 코드의 실행 결과값

자바의 기본형 데이터타입
- 8가지 
- byte, short, int, long
- float, double
- char
- boolean

-> 이 8가지 외에 모든 자바데이터타입은 참조형 데이터타입

char myChar = 'a';

boolean ★★★★★
- 프로그래밍 상에서 참/거짓을 의미 값
- true / false 

int num = 10;

boolean myBool = true;
boolean myBool2 = false;


int hp = 10000

방어구 20%

300 dmg 마법(냉기ㅏ/화염)/물리

######
11:45
######